const express = require('express');const Joi = require('joi');const router = express.Router();const MongoClient = require('mongodb').MongoClient;const connectDB = 'mongodb://localhost:27017';const dbName = 'mytestingdb';router.get('/', function(req, res) {    (async function() {      try {          let client = await MongoClient.connect(connectDB);          const db = client.db(dbName);          const data = await db.collection('customers').find({}).toArray();          res.send(data);      } catch (err) {          console.log(err.message);      }  })();});router.post('/',function (req,res) {    (async function () {        try {            const schema = Joi.object().keys({                name: Joi.string().min(3).required(),            });            const result = Joi.validate(req.body, schema);            if (result.error){                res.status(400).send(result.error.details[0].message);                return;            }            const customerData = {                "name": req.body.name,                "Created At": new Date()            }            console.log("Customer Data -->",customerData);            let client = await MongoClient.connect(connectDB);            const db = client.db(dbName);            const data = await db.collection('customers').insertOne(customerData);            res.status(200).send("Data inserted Successfully");        }catch (err) {            console.log(err.message);        }    })();});router.put('/',function (req,res) {    (async function () {        try {            const schema = Joi.object().keys({                oldName : Joi.string().min(3).required(),                newName : Joi.string().min(3).required()            });            const result = Joi.validate(req.body,schema);            if (result.error){                res.status(400).send(result.error.details[0].message);                return;            }            let oldName = req.body.oldName;            let newName = req.body.newName;            let client = await MongoClient.connect(connectDB);            const db = client.db(dbName);            const data = await db.collection('customers').findOne({name:oldName})            if (data == null) {                res.status(400).send("Data Not Found");            }            else{                const updatedDB = db.collection('customers').updateOne({name:oldName}, {$set:{name:newName}});                res.status(200).send("Data updated Successfully");            }        }catch (err) {            console.log(err.message);        }    })();})router.delete('/:name',function (req,res) {    (async function() {        try {            let client = await MongoClient.connect(connectDB);            const db = client.db(dbName);            const data = await db.collection('customers').deleteOne({name:req.params.name});            res.status(200).send("Data Deleted Successfully");        } catch (err) {            console.log(err.message);        }    })();})module.exports = router;